version: "3.8"

volumes:
  node_modules: {}
  database: {}
  redis: {}

x-darwin: &darwin
  build:
    context: ./backend
    dockerfile: Dockerfile
  volumes:
    - ./backend/darwin:/app/darwin
  env_file: ./backend/.env
  working_dir: /app

services:
  backend:
    <<: *darwin
    container_name: darwin-backend
    command: uvicorn darwin.web.app:app --host 0.0.0.0 --port 8000 --reload
    ports:
      - 8000:8000
    depends_on:
      - database
      - redis
      - worker

  frontend:
    container_name: darwin-frontend
    command: npm run dev
    working_dir: /app
    build:
      context: ./frontend
      dockerfile: Dockerfile.local
    ports:
      - 3000:3000
    volumes:
      - ./frontend:/app
      - node_modules:/app/node_modules
    env_file: ./frontend/.env
    depends_on:
      - backend

  database:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mydatabase
    ports:
      - 5432:5432
    volumes:
      - database:/var/lib/postgresql/data

  redis:
    image: redis:latest
    ports:
      - 6379:6379
    volumes:
      - redis:/data

  worker:
    <<: *darwin
    command: celery -A darwin.celery.celery.celery_app worker --loglevel=info
    depends_on:
      - redis
